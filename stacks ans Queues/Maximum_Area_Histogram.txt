void solve(){
    int n;
    cin>>n;
    vector<int>nums;
    for(int i=0;i<n;i++){
        int x;
        cin>>x;
        nums.push_back(x);
    }
    // find the nge and pge of each element
    vector<int>nge(n);
    stack<int>s;
    for(int i=nums.size()-1;i>=0;i--){
        int element=nums[i];
        while(!s.empty()&&element>=nums[s.top()]){
            s.pop();
        }
        if(s.empty()) nge[i]=-1;
        else nge[i]=s.top();
        s.push(i);
    }
    vector<int>pge(n);
    while(!s.empty()) s.pop();
    for(int i=0;i<nums.size();i++){
        int element=nums[i];
        while(!s.empty()&&element>=nums[s.top()]){
            s.pop();
        }
        if(s.empty()) pge[i]=-1;
        else pge[i]=s.top();
        s.push(i);
    }
    int ans=0;
    for(int i=0;i<nums.size();i++){
        int left=(pge[i]==-1)?i:pge[i];
        int right=(nge[i]==-1)?i:nge[i];
        // cout<<pge[i]<<" "<<nge[i]<<"\n";
        ans=max(ans,(right-left+1)*(nums[i]));
    }
    cout<<ans<<endl;
}