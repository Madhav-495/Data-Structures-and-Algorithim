void solve(){
    int n;
    cin>>n;
    int nums[n];
    for(int i=0;i<n;i++){
        cin>>nums[i];
    }
    int k;
    cin>>k;
    deque<int>dq;
    for(int i=0;i<k;i++){
        int element=nums[i];
        while(!dq.empty()&&dq.back()<element){
            dq.pop_back();
        }
        dq.push_back(element);
    }
    vector<int>ans;
    ans.push_back(dq.front());
    
    int i=1,j=k;
    while(j<n){

        if(nums[i-1]==dq.front()) dq.pop_front();
        int element=nums[j];
        while(!dq.empty()&&dq.back()<element){
            dq.pop_back();
        }
        dq.push_back(element);
        ans.push_back(dq.front());
        j++;i++;
    }
    for(auto x:ans){
        cout<<x<<" ";
    }
    cout<<"\n";
}