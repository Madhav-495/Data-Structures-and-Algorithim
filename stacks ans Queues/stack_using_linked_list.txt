struct ListNode{
    ListNode*next;
    int val;
    ListNode(int x){
        this->val=x;
        this->next=NULL;
    }
};
ListNode*head=NULL;
ListNode*curr=NULL;
void push(int num){
    if(head==NULL){
        curr=new ListNode(num);
        head=curr;
    }
    else{
        ListNode*temp=new ListNode(num);
        temp->next=curr;
        curr=temp;
    }
}
void pop(){
    if(head==NULL){
        cout<<"NO ELEMENT PRESENT IN STACK"<<endl;
        return;
    }

    ListNode*temp=curr->next;
    curr->next=NULL;
    free(curr);
    curr=temp;   
    if(curr==NULL){
        head=NULL;
    }
}
int get_top(){
    if(head==NULL){
        cout<<"NO ELEMENT PRESENT IN STACK"<<endl;
        return -1;
    }
    return curr->val;
}
void solve(){
    cout<<get_top()<<endl;
    push(2);
    push(3);
    push(4);
    cout<<get_top()<<endl;
    pop();
    cout<<get_top()<<endl;
    pop();
    pop();
    pop();
}