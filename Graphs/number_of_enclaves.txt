class Solution {
public:
    int numEnclaves(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        vector<vector<int>>vis(n,vector<int>(m,0));
        queue<pair<int,int>>q;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(i==0||j==0||i==n-1||j==m-1){
                    if(grid[i][j]==1){
                        q.push({i,j});
                        vis[i][j]=1;
                    }
                   
                }
            }
        }
        int x[4]={0,0,1,-1};
        int y[4]={1,-1,0,0};
        while(!q.empty()){
            pair<int,int>temp=q.front();
            q.pop();
            int i=temp.first;
            int j=temp.second;
            
            
            for(int k=0;k<4;k++){
                int newx=i+x[k];
                int newy=j+y[k];
                if(newx>=0&&newy>=0&&newx<n&&newy<m&&vis[newx][newy]==0&&grid[newx][newy]==1){
                    vis[newx][newy]=1;
                    q.push({newx,newy});
                }
            }
        }
        int count=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(vis[i][j]==0&&grid[i][j]==1) count++;
            }
        }
        return count;
    }
};