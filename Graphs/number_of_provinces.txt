class Solution {
    void dfs(vector<int>adj[],vector<int>&vis,int element){
        vis[element]=1;
        for(auto x:adj[element]){
            if(vis[x]==0){
                dfs(adj,vis,x);
            }
        }
    }
public:
    int findCircleNum(vector<vector<int>>& isConnected) {
        int n=isConnected.size();
        vector<int>vis(n+1,0);
        vector<int>adj[n+1];
        for(int i=0;i<isConnected.size();i++){
            for(int j=0;j<isConnected[i].size();j++){
                if(isConnected[i][j]==1){
                    adj[i+1].push_back(j+1);
                    adj[j+1].push_back(i+1);
                }
            }
        }
        int ans=0;
        for(int i=1;i<=n;i++){
            if(vis[i]==0){
                ans++;
                dfs(adj,vis,i);
            }
        }
        return ans;
    }
};