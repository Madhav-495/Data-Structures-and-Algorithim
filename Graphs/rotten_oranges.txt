class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        queue<pair<int,pair<int,int>>>q;
        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[i].size();j++){
                if(grid[i][j]==2){
                    q.push({0,{i,j}});
                }
            }
        }
        int ans=0;
        while(!q.empty()){
            pair<int,pair<int,int>>temp=q.front();
            q.pop();
            int x=temp.second.first;
            int y=temp.second.second;
            int time=temp.first;
            ans=max(ans,time);
            int i[4]={0,0,1,-1};
            int j[4]={1,-1,0,0};
            for(int k=0;k<4;k++){
                int newx=i[k]+x;
                int newy=j[k]+y;
                if(newx>=0&&newx<n&&newy>=0&&newy<m&&grid[newx][newy]==1){
                    grid[newx][newy]=2;
                    q.push({time+1,{newx,newy}});
                }
            }
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==1) return -1;
            }
        }
        return ans;
    }
};