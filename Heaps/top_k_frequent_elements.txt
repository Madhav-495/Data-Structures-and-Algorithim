class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int>mp;
        for(auto x:nums){
            mp[x]++;
        }
        vector<int>ans;
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;
        for(auto x:mp){
            if(pq.size()<k){
                pq.push({x.second,x.first});
            }
            else{
                int fre=x.second;
                if(pq.top().first<fre){
                    pq.pop();
                    pq.push({x.second,x.first});
                }
            }
        }
        while(!pq.empty()){
            ans.push_back(pq.top().second);
            pq.pop();
        }
        return ans;
    }
};