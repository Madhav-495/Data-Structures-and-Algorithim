/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        priority_queue<int, vector <int> ,greater<int> >pq;
        int n=lists.size();
        if(lists.empty() ) return NULL;
        int a=0;
        for(int i=0;i<n;i++){
            if(lists[i]!=NULL) break;
            a++;
            
            
        }
        if(a==n) return NULL;
        for(int i=0;i<n;i++){
            ListNode*temp=lists[i];
            // if(lists[i]==NULL) return NULL;
            while(temp!=NULL){
                pq.push(temp->val);
                temp=temp->next;
            }
        }ListNode*ans=new ListNode(pq.top());
        ListNode*temp=ans;
         pq.pop();
        while(!pq.empty()){
           
            temp->next=new ListNode(pq.top());
            temp=temp->next;
            pq.pop();
        }return ans;
    }
};