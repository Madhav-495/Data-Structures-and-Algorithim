struct TreeNode{
    TreeNode*left;
    TreeNode*right;
    int val;
    TreeNode(int x){
        this->left=NULL;
        this->right=NULL;
        this->val=x;
    }
};
int path_sum(TreeNode*root,int &res){
    if(root==NULL){
        return 0;
    }
    int left=max(0,path_sum(root->left,res));
    int right=max(0,path_sum(root->right,res));
    int spath=max(root->val,max(left+root->val,right+root->val));
    int cpath=left+right+root->val;
    res=max(res,max(spath,cpath));
    return spath;
}
void solve(){
    int res=0;
    TreeNode*root2=new TreeNode(-10);
    root2->left=new TreeNode(9);
    root2->right=new TreeNode(20);
    root2->right->left=new TreeNode(15);
    root2->right->right=new TreeNode(7);
    path_sum(root2,res);
    cout<<res<<endl;  

}