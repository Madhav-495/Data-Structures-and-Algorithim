TreeNode*lca(TreeNode*root,TreeNode*root1,TreeNode*root2){
    if(root==NULL) return root;
    if(root==root1){
        return root;
    }
    if(root==root2){
        return root;
    }
    TreeNode*left=lca(root->left,root1,root2);
    TreeNode*right=lca(root->right,root1,root2);
    if(left==NULL&&right==NULL){
        return NULL;
    }
    else if(left!=NULL&&right!=NULL){
        return root;
    }
    else if(left==NULL&&right!=NULL){
        return right;
    }
    else{
        return left;
    }

}
void solve(){
    int res=0;
    TreeNode*root2=new TreeNode(10);
    root2->left=new TreeNode(20);
    root2->right=new TreeNode(30);
    root2->left->left=new TreeNode(40);
    root2->left->right=new TreeNode(60);
    root2->right->left=new TreeNode(90);
    root2->right->right=new TreeNode(100);
    TreeNode*ans=lca(root2,root2,root2->right->right);
    cout<<ans->val<<endl;
}