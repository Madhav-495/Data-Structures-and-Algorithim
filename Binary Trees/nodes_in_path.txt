struct TreeNode{
    TreeNode*left;
    TreeNode*right;
    int val;
    TreeNode(int x){
        this->left=NULL;
        this->right=NULL;
        this->val=x;
    }
};
void path_nodes(TreeNode*root,vector<int>&path,bool &flag,int &x){
    if(root==NULL) return;
    if(root->val==x){
        path.push_back(x);
        flag=true;
        return;
    }
    
    if(!flag){
        path.push_back(root->val);
        path_nodes(root->left,path,flag,x);
    }
    if(!flag){
        path_nodes(root->right,path,flag,x);
        if(!flag)
        path.pop_back();
    }
    

}
void solve(){
    int res=0;
    TreeNode*root2=new TreeNode(10);
    root2->left=new TreeNode(20);
    root2->right=new TreeNode(30);
    root2->left->left=new TreeNode(40);
    root2->left->right=new TreeNode(60);
    root2->right->left=new TreeNode(90);
    root2->right->right=new TreeNode(100);
    vector<int>ans;
    bool flag=false;
    int x=90;
    path_nodes(root2,ans,flag,x);
    for(auto x:ans){
        cout<<x<<" ";
    }
    cout<<"\n";
}