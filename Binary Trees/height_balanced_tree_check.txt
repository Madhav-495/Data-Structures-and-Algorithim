struct TreeNode{
    TreeNode*left;
    TreeNode*right;
    int val;
    TreeNode(int x){
        this->left=NULL;
        this->right=NULL;
        this->val=x;
    }
};
pair<int,bool>check(TreeNode*root){
    if(root==NULL){
        return {0,true};
    }
    pair<int,bool>left=check(root->left);
    pair<int,bool>right=check(root->right);

    bool c=(abs(left.first-right.first)<=1);
    return {max(left.first,right.first)+1,c&&left.second&&right.second};
}
void solve(){
    TreeNode*root=new TreeNode(1);
    root->left=new TreeNode(2);
    root->right=new TreeNode(3);
    root->left->left=new TreeNode(4);
    root->left->right=new TreeNode(5);
    root->left->right->left=new TreeNode(8);
    root->right->left=new TreeNode(6);
    root->right->right=new TreeNode(7);
    root->right->right->left=new TreeNode(9);
    root->right->right->right=new TreeNode(10);
    cout<<check(root).first<<endl;    

}