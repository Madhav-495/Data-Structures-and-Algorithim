void solve(){
    ListNode*head=NULL;
    ListNode*curr=head;
    int n;
    cin>>n;
    for(int i=0;i<n;i++){
        int x;
        cin>>x;
        insert(curr,x);
        if(head==NULL) head=curr;
    }
    int m;
    cin>>m;
    ListNode*head2=NULL;
    ListNode*curr2=head2;
    fi(0,m){
        int x;
        cin>>x;
        insert(curr2,x);
        if(head2==NULL) head2=curr2;
    }
    curr2->next=head->next->next;
    
    ListNode*ptr1=head;
    ListNode*ptr2=head2;
    while(ptr1!=ptr2){
        if(ptr1==NULL) ptr1=head2;
        if(ptr2==NULL) ptr2=head;

        
        ptr1=ptr1->next;
        ptr2=ptr2->next;
    }
    if(ptr1==NULL) cout<<"NO intersection found"<<endl;
    else cout<<ptr1->val<<endl;
}