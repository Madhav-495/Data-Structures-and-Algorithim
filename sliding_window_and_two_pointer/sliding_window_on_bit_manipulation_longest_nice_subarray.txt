class Solution {
    bool check(vector<int>&temp){
        for(int i=0;i<temp.size();i++){
            if(temp[i]>1) return false;
        }
        return true;
    }
    void solve(int n,vector<int>&temp){
        int i=0;
        while(n!=0){
            temp[i++]+=n%2;
            n/=2;
        }
        return ;
    }
    void solverev(int n,vector<int>&temp){
        int i=0;
        while(n!=0){
            temp[i++]-=n%2;
            n=n/2;
        }
        return ;
    }
public:
    int longestNiceSubarray(vector<int>& nums) {
        vector<int>temp(32,0);
        int i=0,j=0;
        int ans=INT_MIN;
        while(j<nums.size()){
            solve(nums[j],temp);
            if(check(temp)){
                ans=max(ans,j-i+1);
                j++;
            }
            else{
                while(!check(temp)){
                    solverev(nums[i],temp);
                    i++;
                }
                j++;
            }
        }
        return ans;
    }
};