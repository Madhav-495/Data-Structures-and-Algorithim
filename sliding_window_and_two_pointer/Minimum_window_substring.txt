class Solution {
public:
    string minWindow(string s, string t) {
        string ans="";
        unordered_map<char,int>mp;
        int index=s.find(t);
        if(index!=string::npos) return t;
        for(auto x:t){
            mp[x]++;
        }
        int i=0,j=0;
        int len=INT_MAX;
        int count=mp.size();
        while(j<s.length()){
            mp[s[j]]--;

            if(mp[s[j]]==0) count--;
            if(count==0){
                
                while(count==0){
                    if(j-i+1<len){
                    len=j-i+1;
                    ans=s.substr(i,j-i+1);
                    }
                    if(mp.find(s[i])!=mp.end())
                    mp[s[i]]++;
                    if(mp[s[i]]>0) count++;
                    i++;
                }
            }
            j++;
        }
        return ans;
    }
};